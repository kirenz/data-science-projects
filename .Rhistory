# Common packages
library(tidyverse) # collection of data science packages
library(janitor) # data preparation package
library(kableExtra) # create nice HTML tables
# Load the data from GitHub
LINK = "https://raw.githubusercontent.com/kirenz/datasets/master/oecd_gdp.csv"
df <- read_csv(LINK)
# Change column names
df <-  clean_names(df)
# Visualize the data
ggplot(df, aes(x=gdp_per_capita,
y=life_satisfaction)) +
geom_point() +
theme_classic()
library(tidymodels)
# Select a linear regression model
lm_mod <-
linear_reg() %>%
set_engine("lm")
# Train the model
lm_fit <-
lm_mod %>%
fit(life_satisfaction ~ gdp_per_capita, data = df)
# Model summary
tidy(lm_fit)
# Make a prediction for a new GDP value
X_new <-  tibble(gdp_per_capita = c(50000)) # new GDP per capita
# print HTML-friendly output with kable()
kable(predict(lm_fit, new_data = X_new))
# Performance measure
rmse(df, lm_fit, na_rm = TRUE)
# Performance measure
rmse(df$gdp_per_capita,
df$life_satisfaction,
lm_fit,
na_rm = TRUE)
glance(lm_fit$fit)
# Performance measure
glance(lm_fit$fit) # sigma is rmse
# Performance measure
glance(lm_fit) # sigma is rmse
# Performance measure
glance(lm_fit) # sigma is rmse
augment(lmfit)
augment(lm_fit)
library(broom) # tidy model output
library(broom)
# Model summary
tidy(lm_fit)
augment(lm_fit)
augment(lm_fit$fit)
# Performance measure
glance(lm_fit$fit) # sigma is rmse
# Prediction
lm_pred <-
lm_fit %>%
predict(new_data = df) %>%
mutate(y_truth = df$life_satisfaction)
#lm_pred %>%
rmse(truth = y_truth, estimate = .pred, lm_pred)
library(tidymodels)
# Select a linear regression model
lm_mod <-
linear_reg() %>%
set_engine("lm")
# Train the model
lm_fit <-
lm_mod %>%
fit(life_satisfaction ~ gdp_per_capita, data = df)
# Model summary
tidy(lm_fit)
# Prediction
lm_pred <-
lm_fit %>%
predict(new_data = df) %>%
mutate(y_truth = df$life_satisfaction)
# Performance measures
rmse(truth = y_truth,
estimate = .pred,
lm_pred)
glance(lm_fit$fit) # more measures
# Make a prediction for a new GDP value
X_new <-  tibble(gdp_per_capita = c(50000)) # new GDP per capita
# print HTML-friendly output with kable()
kable(predict(lm_fit, new_data = X_new))

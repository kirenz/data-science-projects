# Common packages
library(tidyverse) # collection of data science packages
library(janitor) # data preparation package
library(kableExtra) # create nice HTML tables
# Load the data from GitHub
LINK = "https://raw.githubusercontent.com/kirenz/datasets/master/oecd_gdp.csv"
df <- read_csv(LINK)
# Change column names
df <-  clean_names(df)
# Visualize the data
ggplot(df, aes(x=gdp_per_capita,
y=life_satisfaction)) +
geom_point() +
theme_classic()
library(tidymodels)
# Select a linear regression model
lm_mod <-
linear_reg() %>%
set_engine("lm")
# Train the model
lm_fit <-
lm_mod %>%
fit(life_satisfaction ~ gdp_per_capita, data = df)
# Model summary
tidy(lm_fit)
# Make a prediction for a new GDP value
X_new <-  tibble(gdp_per_capita = c(50000)) # new GDP per capita
# print HTML-friendly output with kable()
kable(predict(lm_fit, new_data = X_new))
# Performance measure
rmse(df, lm_fit, na_rm = TRUE)
# Performance measure
rmse(df$gdp_per_capita,
df$life_satisfaction,
lm_fit,
na_rm = TRUE)
glance(lm_fit$fit)
# Performance measure
glance(lm_fit$fit) # sigma is rmse
# Performance measure
glance(lm_fit) # sigma is rmse
# Performance measure
glance(lm_fit) # sigma is rmse
augment(lmfit)
augment(lm_fit)
library(broom) # tidy model output
library(broom)
# Model summary
tidy(lm_fit)
augment(lm_fit)
augment(lm_fit$fit)
# Performance measure
glance(lm_fit$fit) # sigma is rmse
# Prediction
lm_pred <-
lm_fit %>%
predict(new_data = df) %>%
mutate(y_truth = df$life_satisfaction)
#lm_pred %>%
rmse(truth = y_truth, estimate = .pred, lm_pred)
library(tidymodels)
# Select a linear regression model
lm_mod <-
linear_reg() %>%
set_engine("lm")
# Train the model
lm_fit <-
lm_mod %>%
fit(life_satisfaction ~ gdp_per_capita, data = df)
# Model summary
tidy(lm_fit)
# Prediction
lm_pred <-
lm_fit %>%
predict(new_data = df) %>%
mutate(y_truth = df$life_satisfaction)
# Performance measures
rmse(truth = y_truth,
estimate = .pred,
lm_pred)
glance(lm_fit$fit) # more measures
# Make a prediction for a new GDP value
X_new <-  tibble(gdp_per_capita = c(50000)) # new GDP per capita
# print HTML-friendly output with kable()
kable(predict(lm_fit, new_data = X_new))
# Common packages
library(tidyverse) # collection of important packages
library(tidymodels)  # collection of data science packages
library(janitor) # data preparation package
library(kableExtra) # to create nice HTML tables
# Load the data from GitHub
LINK = "https://raw.githubusercontent.com/kirenz/datasets/master/oecd_gdp.csv"
df <- read_csv(LINK)
# Take a look at the data
glimpse(df)
# Change column names
df <-  clean_names(df)
# Visualize the data
ggplot(df, aes(x=gdp_per_capita,
y=life_satisfaction)) +
geom_point() +
theme_classic()
lm_mod <-
linear_reg() %>%
set_engine("lm") %>%
set_mode(mode = "regression")
library(kknn)
knn_mod <-
nearest_neighbor(neighbors = 3) %>%
set_engine("kknn") %>%
set_mode("regression")
set.seed(123)
cv_folds <- vfold_cv(df_train, v = 5)
set.seed(123)
df_split <- initial_split(df)
df_train <- training(df_split)
df_test <- testing(df_split)
set.seed(123)
cv_folds <- vfold_cv(df_train, v = 5)
lm_fit <-
lm_mod %>%
fit_resamples(life_satisfaction ~ gdp_per_capita,
resamples = cv_folds)
# Model summary
lm_fit %>%
collect_metrics(summarize = FALSE)
lm_fit %>%
collect_metrics(summarize = TRUE)
knn_fit <-
knn_mod %>%
fit_resamples(life_satisfaction ~ gdp_per_capita,
resamples = cv_folds)
# Model summary
knn_fit %>%
collect_metrics(summarize = FALSE)
knn_fit %>%
collect_metrics(summarize = TRUE)
# Train best model with all training data
last_lm_fit <-
lm_mod %>%
fit(life_satisfaction ~ gdp_per_capita,
data = df_train)
# Prediction
last_lm_pred <-
last_lm_fit %>%
predict(new_data = df_test) %>%
mutate(y_truth = df_test$life_satisfaction)
# Performance measures
rmse(truth = y_truth,
estimate = .pred,
last_lm_pred)
glance(last_lm_fit$fit) # more measures
X_new <-  tibble(gdp_per_capita = c(50000)) # new GDP per capita
kable(predict(last_lm_fit, new_data = X_new))
# Make a prediction for a new GDP value
X_new <-  tibble(gdp_per_capita = c(50000)) # new GDP per capita
(predict(last_lm_fit, new_data = X_new))
glance(last_lm_fit$fit) # more measures
tidy(last_lm_fit)
# Train best model with all training data
last_lm_fit <-
lm_mod %>%
fit(life_satisfaction ~ gdp_per_capita,
data = df_train)
# Model coefficients
tidy(last_lm_fit)
# Prediction
last_lm_pred <-
last_lm_fit %>%
predict(new_data = df_test) %>%
mutate(y_truth = df_test$life_satisfaction)
# Performance measures
rmse(truth = y_truth,
estimate = .pred,
last_lm_pred)
glance(last_lm_fit$fit) # more measures
# Make a prediction for a new GDP value
X_new <-  tibble(gdp_per_capita = c(50000)) # new GDP per capita
(predict(last_lm_fit, new_data = X_new))
lm_fit <-
lm_mod %>%
fit(life_satisfaction ~ gdp_per_capita,
data = df)
# Common packages
library(tidyverse) # collection of important packages
library(tidymodels)  # collection of data science packages
library(janitor) # data preparation package
library(kknn) # K-nearest neighbor model
# Load the data from GitHub
LINK = "https://raw.githubusercontent.com/kirenz/datasets/master/oecd_gdp.csv"
df <- read_csv(LINK)
# Take a look at the data
glimpse(df)
# Change column names
df <-  clean_names(df)
# Visualize the data
ggplot(df, aes(x=gdp_per_capita,
y=life_satisfaction)) +
geom_point() +
theme_classic()
lm_mod <-
linear_reg() %>%
set_engine("lm") %>%
set_mode(mode = "regression")
lm_fit <-
lm_mod %>%
fit(life_satisfaction ~ gdp_per_capita,
data = df)
tidy(lm_fit)
# Prediction
lm_pred <-
lm_fit %>%
predict(new_data = df) %>%
mutate(y_truth = df$life_satisfaction)
# Performance measures
rmse(truth = y_truth,
estimate = .pred,
lm_pred)
glance(lm_fit$fit) # more measures
# Make a prediction for a new GDP value
X_new <-  tibble(gdp_per_capita = c(50000)) # new GDP per capita
(predict(last_lm_fit, new_data = X_new))
(predict(lm_fit, new_data = X_new))
knn_mod <-
nearest_neighbor(neighbors = 3) %>%
set_engine("kknn") %>%
set_mode("regression")
knn_fit <-
knn_mod %>%
fit(life_satisfaction ~ gdp_per_capita,
data = df)
# Model coefficients
tidy(knn_fit)
knn_fit
knn_mod <-
nearest_neighbor(neighbors = 3) %>%
set_engine("kknn") %>%
set_mode("regression")
knn_fit <-
knn_mod %>%
fit(life_satisfaction ~ gdp_per_capita,
data = df)
# Model coefficients
tidy(knn_fit)
# Common packages
library(tidyverse) # collection of important packages
library(tidymodels)  # collection of data science packages
library(janitor) # data preparation package
library(kknn) # K-nearest neighbor model
# Load the data from GitHub
LINK = "https://raw.githubusercontent.com/kirenz/datasets/master/oecd_gdp.csv"
df <- read_csv(LINK)
# Take a look at the data
glimpse(df)
# Change column names
df <-  clean_names(df)
# Visualize the data
ggplot(df, aes(x=gdp_per_capita,
y=life_satisfaction)) +
geom_point() +
theme_classic()
lm_mod <-
linear_reg() %>%
set_engine("lm") %>%
set_mode(mode = "regression")
lm_fit <-
lm_mod %>%
fit(life_satisfaction ~ gdp_per_capita,
data = df)
# Model summary
tidy(lm_fit)
# Prediction
lm_pred <-
lm_fit %>%
predict(new_data = df) %>%
mutate(y_truth = df$life_satisfaction)
# Performance measures
rmse(truth = y_truth,
estimate = .pred,
lm_pred)
glance(lm_fit$fit) # more measures
# Make a prediction for a new GDP value
X_new <-  tibble(gdp_per_capita = c(50000)) # new GDP per capita
(predict(lm_fit, new_data = X_new))
knn_mod <-
nearest_neighbor(neighbors = 3) %>%
set_engine("kknn") %>%
set_mode("regression")
knn_fit <-
knn_mod %>%
fit(life_satisfaction ~ gdp_per_capita,
data = df)
# Model coefficients
tidy(knn_fit)
(predict(last_lm_fit, new_data = X_new))
# Common packages
library(tidyverse) # collection of important packages
library(tidymodels)  # collection of data science packages
library(janitor) # data preparation package
library(kknn) # K-nearest neighbor model
# Load the data from GitHub
LINK <- "https://raw.githubusercontent.com/kirenz/datasets/master/oecd_gdp.csv"
df <- read_csv(LINK)
# Take a look at the data
glimpse(df)
# Change column names
df <-  clean_names(df)
# Visualize the data
ggplot(df, aes(x=gdp_per_capita,
y=life_satisfaction)) +
geom_point() +
theme_classic()
# Load common packages
library(tidyverse) # collection of important data science packages
library(tidymodels)  # collection of packages for modeling and ml
library(janitor) # data preparation package
library(kknn) # K-nearest neighbor model
# Change column names
df <-  clean_names(df)
# Visualize the data
ggplot(df, aes(x=gdp_per_capita,
y=life_satisfaction)) +
geom_point() +
theme_classic()
lm_mod <-
linear_reg() %>%
set_engine("lm") %>%
set_mode(mode = "regression")
lm_fit <-
lm_mod %>%
fit(life_satisfaction ~ gdp_per_capita,
data = df)
# Model summary
tidy(lm_fit)
# Predictions
lm_pred <-
lm_fit %>%
predict(new_data = df) %>%
mutate(y_truth = df$life_satisfaction)
head(lm_pred)
glance(lm_fit$fit)
X_new <-  tibble(gdp_per_capita = c(50000)) # new GDP per capita
(predict(lm_fit, new_data = X_new))
knn_mod <-
nearest_neighbor(neighbors = 3) %>%
set_engine("kknn") %>%
set_mode("regression")
knn_fit <-
knn_mod %>%
fit(life_satisfaction ~ gdp_per_capita,
data = df)
(predict(knn_fit, new_data = X_new))
# Model prediction
knn_pred <-
knn_fit %>%
predict(new_data = df) %>%
mutate(y_truth = df$life_satisfaction)
rmse(truth = y_truth, # true values
estimate = .pred,  # model predictions
knn_pred) # data
(predict(knn_fit, new_data = X_new))
# Load the data from GitHub
LINK = "https://raw.githubusercontent.com/kirenz/datasets/master/oecd_gdp.csv"
df <- read_csv(LINK)
# Take a look at the data
glimpse(df)
# Change column names
df <-  clean_names(df)
# Visualize the data
ggplot(df, aes(x=gdp_per_capita,
y=life_satisfaction)) +
geom_point() +
theme_classic()
lm_mod <-
linear_reg() %>%
set_engine("lm") %>%
set_mode(mode = "regression")
knn_mod <-
nearest_neighbor(neighbors = 3) %>%
set_engine("kknn") %>%
set_mode("regression")
set.seed(123)
df_split <- initial_split(df)
df_train <- training(df_split)
df_test <- testing(df_split)
set.seed(123)
cv_folds <- vfold_cv(df_train, v = 5)
# Model summary
lm_fit %>%
collect_metrics(summarize = FALSE)
lm_fit %>%
collect_metrics(summarize = TRUE)
# Load the data from GitHub
LINK = "https://raw.githubusercontent.com/kirenz/datasets/master/oecd_gdp.csv"
df <- read_csv(LINK)
# Take a look at the data
glimpse(df)
# Change column names
df <-  clean_names(df)
# Visualize the data
ggplot(df, aes(x=gdp_per_capita,
y=life_satisfaction)) +
geom_point() +
theme_classic()
lm_mod <-
linear_reg() %>%
set_engine("lm") %>%
set_mode(mode = "regression")
knn_mod <-
nearest_neighbor(neighbors = 3) %>%
set_engine("kknn") %>%
set_mode("regression")
set.seed(123)
df_split <- initial_split(df)
df_train <- training(df_split)
df_test <- testing(df_split)
set.seed(123)
cv_folds <- vfold_cv(df_train, v = 5)
lm_fit <-
lm_mod %>%
fit_resamples(life_satisfaction ~ gdp_per_capita,
resamples = cv_folds)
# Model summary for every split
lm_fit %>%
collect_metrics(summarize = FALSE)
lm_fit %>%
collect_metrics(summarize = TRUE)
# Performance measures for every fold
collect_metrics(lm_fit, summarize = FALSE)
# Average performance accross all folds
collect_metrics(lm_fit, summarize = TRUE)
knn_fit <-
knn_mod %>%
fit_resamples(life_satisfaction ~ gdp_per_capita,
resamples = cv_folds)
last_lm_pred <-
last_lm_fit %>%
predict(new_data = df_test) %>%
mutate(y_truth = df_test$life_satisfaction)
last_lm_fit <-
lm_mod %>%
fit(life_satisfaction ~ gdp_per_capita,
data = df_train)
tidy(last_lm_fit)
last_lm_pred <-
last_lm_fit %>%
predict(new_data = df_test) %>%
mutate(y_truth = df_test$life_satisfaction)
# Performance measures
rmse(truth = y_truth,
estimate = .pred,
last_lm_pred)
glance(last_lm_fit$fit) # more measures
X_new <-  tibble(gdp_per_capita = c(50000))
(predict(last_lm_fit, new_data = X_new))
lm_predicted <-
augment(lm_fit$fit, data = df) %>%
rowid_to_column()
lm_predicted
lm_predicted <-
augment(lm_fit$fit, data = df)
# Load packages
library(tidyverse) # collection of important data science packages
library(tidymodels)  # collection of packages for modeling and ml
library(janitor) # data preparation package
library(kknn) # K-nearest neighbor model
lm_mod <-
linear_reg() %>%
set_engine("lm") %>%
set_mode(mode = "regression")
lm_fit <-
lm_mod %>%
fit(life_satisfaction ~ gdp_per_capita,
data = df)
tidy(lm_fit)
lm_pred <-
lm_fit %>%
predict(new_data = df) %>%
mutate(y_truth = df$life_satisfaction)
head(lm_pred)
lm_predicted <-
augment(lm_fit$fit, data = df) %>%
rowid_to_column()
lm_predicted
lm_predicted <- augment(lm_fit$fit, data = df)
lm_predicted
lm_pred_aug <- augment(lm_fit$fit, data = df)
head(lm_pred_aug)
head(lm_pred)
library(readr)
Facebook_metrics <- read_csv("~/Downloads/Facebook_metrics.csv")
View(Facebook_metrics)
library(tidyverse)
df <- drop_na(Facebook_metrics)
sum(is.na(df))
sum(is.na(Facebook_metrics))
df
View(df)
library(janitor)
Facebook_metrics <- clean_names(Facebook_metrics)
Facebook_metrics
glimpse(Facebook_metrics)
sum(is.na(Facebook_metrics))
df <- drop_na(Facebook_metrics, beitragsinteraktionen )
df
sum(is.na(df))
df
View(df)
